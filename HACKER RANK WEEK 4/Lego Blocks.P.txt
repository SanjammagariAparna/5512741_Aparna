def legoBlocks(n, m):
    MOD = 10**9 + 7
    
    # Step 1: row arrangements
    row = [0] * (m + 1)
    row[0] = 1
    for i in range(1, m + 1):
        row[i] = 0
        for b in range(1, 5):  # bricks of size 1-4
            if i - b >= 0:
                row[i] = (row[i] + row[i - b]) % MOD
    
    # Step 2: total ways for wall (without crack constraint)
    total = [pow(row[i], n, MOD) for i in range(m + 1)]
    
    # Step 3: subtract invalid (inclusion-exclusion)
    valid = [0] * (m + 1)
    valid[0] = 1
    for i in range(1, m + 1):
        val = total[i]
        for k in range(1, i):
            val = (val - valid[k] * total[i - k]) % MOD
        valid[i] = val
    
    return valid[m] % MOD