#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'noPrefix' function below.
#
# The function accepts STRING_ARRAY words as parameter.
#

class TrieNode:
    def __init__(self):
        self.children = {}
        self.is_end = False  # Marks the end of a complete word

def noPrefix(words):
    root = TrieNode()

    for word in words:
        current = root
        for i, char in enumerate(word):
            if char not in current.children:
                current.children[char] = TrieNode()
            current = current.children[char]
            
            # If a word already ends here, it's a prefix of the current word
            if current.is_end:
                print("BAD SET")
                print(word)
                return
        
        # If current word is a prefix of any other (already exists in trie)
        if current.children:
            print("BAD SET")
            print(word)
            return
        
        current.is_end = True  # Mark end of current word

    print("GOOD SET")


if __name__ == '__main__':
    n = int(input().strip())

    words = []

    for _ in range(n):
        words_item = input()
        words.append(words_item)

    noPrefix(words)
